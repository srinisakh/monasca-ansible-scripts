---
- name: setup group
  group: name={{monasca_group}} system=yes

- name: Setup user
  user: name={{monasca_api_user}} system=yes group={{monasca_group}}

- name: create jar dir
  file: path={{monasca_jar_dir}} state=directory owner=root group=root mode=755

- name: Fetch api jar
  get_url: dest={{monasca_jar_dir}}/monasca-api.jar url="{{monasca_api_tarball_base_url}}/monasca-api-{{monasca_api_version}}-shaded.jar" force=yes
  environment:
    http_proxy: http://web-proxy.fc.hp.com:8080
    https_proxy: http://web-proxy.fc.hp.com:8080
  notify:
    - restart monasca-api
  when: not skip_install

- name: Detect if this is a systemd based system
  command: cat /proc/1/comm
  register: init
- set_fact: use_systemd=True
  when: init.stdout == 'systemd'
- set_fact: use_systemd=False
  when: init.stdout != 'systemd'

- name: create systemd config
  template: dest={{api_systemd_service}} owner=root group=root mode=644 src=monasca-api.service.j2
  notify:
    - restart monasca-api
  when: use_systemd

- command: systemctl daemon-reload
  when: use_systemd

- name: create upstart script from template
  template: dest=/etc/init/monasca-api.conf owner=root group=root mode=744 src=monasca-api.conf.j2
  notify:
    - restart monasca-api
  when: not use_systemd

- name: create monasca log dir
  file: path={{monasca_log_dir}} state=directory owner=root group={{monasca_group}} mode=775

- name: create api log dir
  file: path={{api_log_dir}} state=directory owner=root group={{monasca_group}} mode=775

- name: create conf_dir
  file: path={{monasca_conf_dir}} state=directory owner=root group={{monasca_group}} mode=775

- name: create conf_file from template
  template: dest={{api_conf_file}} owner={{monasca_api_user}} group={{monasca_group}} mode=640 src=api-config.yml.j2
  notify:
    - restart monasca-api

- name: Copy Truststore
  copy: dest={{monasca_api_truststore}} src={{monasca_api_truststore_src}}
  when: monasca_api_truststore_src is defined
  notify:
    - restart monasca-api

- name: Copy Client Keystore
  copy: dest={{monasca_api_client_keystore}} src={{monasca_api_client_keystore_src}}
  when: monasca_api_client_keystore_src is defined
  notify:
    - restart monasca-api

- name: Copy Keystore
  copy: dest={{monasca_api_keystore}} src={{monasca_api_keystore_src}}
  when: monasca_api_keystore_src is defined
  notify:
    - restart monasca-api

- meta: flush_handlers

- name: Enable monasca-api
  service: name=monasca-api state=started enabled=yes

- name: wait for api port
  wait_for: port={{monasca_api_client_port}} host={{monasca_api_bind_host | default('127.0.0.1') }} state=started timeout=10
  when: verify
