---
- name: Install OpenJDK
  apt: name=openjdk-7-jre-headless state=present
  when: not skip_install

- name: Setup group
  group: name={{storm_group}} system=yes

- name: Setup user
  user: name={{storm_user}} system=yes group={{storm_group}}

- name: Create Storm root directory
  file: path={{storm_root_dir}} state=directory owner={{storm_user}} group={{storm_group}} mode=755

- name: Fetch storm package
  get_url: dest=/root/apache-storm-{{storm_version}}.tar.gz url="{{apache_mirror}}/storm/apache-storm-{{storm_version}}/apache-storm-{{storm_version}}.tar.gz"
  environment:
    http_proxy: http://web-proxy.fc.hp.com:8080
    https_proxy: http://web-proxy.fc.hp.com:8080
  when: not skip_install

- name: Uncompress the storm tar
  unarchive: copy=no creates={{storm_root_dir}}/apache-storm-{{storm_version}} dest={{storm_root_dir}} src=/root/apache-storm-{{storm_version}}.tar.gz

- name: Link current version
  file: path={{storm_root_dir}}/current state=link src={{storm_root_dir}}/apache-storm-{{storm_version}}

- name: Create Storm log and local directories
  file: path={{item}} state=directory owner={{storm_user}} group={{storm_group}} mode=775
  with_items:
    - "{{storm_local_dir}}"
    - "/var/log/storm"

- name: Copy custom logback cluster.xml over the default one, if present
  shell: cp {{storm_cluster_logback_xml}} {{storm_root_dir}}/current/logback/cluster.xml
  when: storm_cluster_logback_xml is defined

- name: Check if Storm log directory already exists
  stat: path={{storm_root_dir}}/current/logs get_md5=False
  register: storm_logs_dir

- name: Create Storm log symlink to /var/log/storm if directory does not exist
  file: path={{storm_root_dir}}/current/logs state=link src=/var/log/storm
  when: not storm_logs_dir.stat.exists

- name: Detect if this is a systemd based system
  command: cat /proc/1/comm
  register: init
- set_fact: use_systemd=True
  when: init.stdout == 'systemd'
- set_fact: use_systemd=False
  when: init.stdout != 'systemd'

- include: nimbus.yml tags=storm_nimbus
  when: storm_nimbus_enabled

- include: supervisor.yml tags=storm_supervisor
  when: storm_supervisor_enabled
